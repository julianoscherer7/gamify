-- database.sql (vers√£o robusta)
CREATE DATABASE IF NOT EXISTS livros_gamificados CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE livros_gamificados;

-- usu√°rios: agora com streak e last_read
CREATE TABLE IF NOT EXISTS users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(50) UNIQUE NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  points INT DEFAULT 0,
  streak INT DEFAULT 0,
  last_read DATE DEFAULT NULL,
  badge VARCHAR(50) DEFAULT 'Novato',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- livros com g√™nero
CREATE TABLE IF NOT EXISTS books (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(150) NOT NULL,
  description TEXT,
  genre VARCHAR(60) DEFAULT 'General',
  points INT DEFAULT 10
) ENGINE=InnoDB;

-- marca√ß√£o de leitura (√∫nico par user-book)
CREATE TABLE IF NOT EXISTS user_books (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  book_id INT NOT NULL,
  completed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY uq_user_book(user_id, book_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (book_id) REFERENCES books(id) ON DELETE CASCADE
) ENGINE=InnoDB;

-- conquistas definidas e relacionamentos j√° obtidos
CREATE TABLE IF NOT EXISTS achievements (
  id INT AUTO_INCREMENT PRIMARY KEY,
  code VARCHAR(60) UNIQUE NOT NULL,
  title VARCHAR(120) NOT NULL,
  description VARCHAR(255),
  icon VARCHAR(64) DEFAULT '‚≠ê'
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS user_achievements (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  achievement_id INT NOT NULL,
  unlocked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY uq_user_achievement(user_id, achievement_id),
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
  FOREIGN KEY (achievement_id) REFERENCES achievements(id) ON DELETE CASCADE
) ENGINE=InnoDB;

-- seeds: livros iniciais
INSERT INTO books (title, description, genre, points) VALUES
('Dom Casmurro','Cl√°ssico brasileiro de Machado de Assis.','Fic√ß√£o',15),
('O Pequeno Pr√≠ncipe','Livro po√©tico e filos√≥fico de Antoine de Saint-Exup√©ry.','Infantil',10),
('1984','Distopia sobre vigil√¢ncia e totalitarismo ‚Äî George Orwell.','Distopia',20),
('O Hobbit','Fantasia de J. R. R. Tolkien.','Fantasia',25),
('A Revolu√ß√£o dos Bichos','F√°bula pol√≠tica por George Orwell.','Distopia',12),
('Sapiens','Uma breve hist√≥ria da humanidade ‚Äî Yuval Noah Harari.','N√£o-fic√ß√£o',30),
('O Alquimista','Paulo Coelho ‚Äî Jornada espiritual.','Fic√ß√£o',14)
ON DUPLICATE KEY UPDATE title=title;

-- seeds: achievements padr√µes
INSERT INTO achievements (code,title,description,icon) VALUES
('first_book','Primeiro Livro','Marcar o primeiro livro como lido.','ü•á'),
('ten_books','10 Livros','Marcar 10 livros como lidos.','üìö'),
('bookworm_30','Streak 30 dias','Ler ao menos 1 livro por dia durante 30 dias (streak).','üî•'),
('genre_master','Mestre de G√™nero','Ler 5 livros do mesmo g√™nero.','üèÖ'),
('points_1000','1000 Pontos','Acumular 1000 pontos.','üéØ')
ON DUPLICATE KEY UPDATE code=code;

-- exemplo: user demo (senha: 123456)
INSERT INTO users (username, email, password, points, badge) VALUES
('demo','demo@exemplo.com','$2y$10$H7Sjd9c9n2v5aC1yYz8p8eG5D6B7g2mWmY8pX8B0l0ZiZC9Q6QKqS',0,'Novato')
ON DUPLICATE KEY UPDATE email=email;
